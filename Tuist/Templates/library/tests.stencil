import XCTest
@testable import {{ name }}
import ComposableArchitecture

final class {{ name }}Tests: XCTestCase {
  @MainActor
  func testBasicFlow() async {
    let store = TestStore(
      initialState: {{ name }}Feature.State(),
      reducer: {{ name }}Feature()
    )

    await store.send(.onAppear) {
      $0.isLoading = true
    }

    let items = [{{ name }}Item(title: "Test", details: "Details")]
    await store.receive(.itemsResponse(.success(items))) {
      $0.isLoading = false
      $0.items = IdentifiedArray(uniqueElements: items)
    }
  }

  @MainActor
  func testErrorHandling() async {
    let store = TestStore(
      initialState: {{ name }}Feature.State(),
      reducer: {{ name }}Feature()
    ) {
      $0.{{ name | lowercase }}Client.fetchItems = {
        throw {{ name }}Error.networkError(NSError(domain: "", code: -1))
      }
    }

    await store.send(.onAppear) {
      $0.isLoading = true
    }

    await store.receive(.itemsResponse(.failure({{ name }}Error.networkError(NSError(domain: "", code: -1))))) {
      $0.isLoading = false
      $0.error = {{ name }}Error.networkError(NSError(domain: "", code: -1))
    }
  }
}
