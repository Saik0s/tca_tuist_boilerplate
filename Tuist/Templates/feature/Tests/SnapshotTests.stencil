//
// {{ name }}SnapshotTests.swift
//

import ComposableArchitecture
@testable import {{ name }}
import {{ name }}Interface
import SnapshotTesting
import SwiftUI
import XCTest

@MainActor
final class {{ name }}SnapshotTests: XCTestCase {
  func test{{ name }}View() async {
    let view = {{ name }}View(store: .init(initialState: {{ name }}Feature.State(items: {{ name }}Item.mocks)) {})

    assertSnapshot(
      of: view,
      as: .image(precision: 0.98, layout: .device(config: .iPhoneXsMax)),
      named: "default"
    )

    // Test loading state
    let loadingView = {{ name }}View(store: .init(initialState: {{ name }}Feature.State(isLoading: true)) {})
    assertSnapshot(
      of: loadingView,
      as: .image(precision: 0.98, layout: .device(config: .iPhoneXsMax)),
      named: "loading"
    )

    // Test empty state
    let emptyView = {{ name }}View(store: .init(initialState: {{ name }}Feature.State()) {})
    assertSnapshot(
      of: emptyView,
      as: .image(precision: 0.98, layout: .device(config: .iPhoneXsMax)),
      named: "empty"
    )
  }

  func test{{ name }}AddItemView() {
    let view = NavigationStack {
      {{ name }}AddItemView(store: .init(initialState: {{ name }}AddItem.State(item: {{ name }}Item.mock)) {})
    }

    assertSnapshot(
      of: view,
      as: .image(precision: 0.98, layout: .device(config: .iPhoneXsMax)),
      named: "default"
    )
  }

  func test{{ name }}EditItemView() {
    let view = NavigationStack {
      {{ name }}EditItemView(store: .init(initialState: {{ name }}EditItem.State(item: {{ name }}Item.mock)) {})
    }

    assertSnapshot(
      of: view,
      as: .image(precision: 0.98, layout: .device(config: .iPhoneXsMax)),
      named: "default"
    )
  }
}
